@page "/"
@inherits EmployeeListBase
@using EmployeeManagement.Models;
@inject DialogService DialogService
<h3>Employee List</h3>


<RadzenDataGrid FilterMode="FilterMode.Advanced" Data="@Employees" TItem="Employee">
    <Columns>
        <RadzenDataGridColumn TItem="Employee" Property="EmployeeId" Filterable="false" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="Employee" Property="FirstName" Title="First Name" Frozen="true" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="LastName" Title="Last Name" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="Gender" Title="Gender" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="Email" Title="Email Address" Width="160px" />

        <!-- Custom column for Update Email Address with TextBox -->
        <RadzenDataGridColumn TItem="Employee" Title="Update Email Address" Width="160px">
            <Template Context="Employee">
                <RadzenTextBox @bind-Value="@Employee.Email" class="w-100"/>
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Employee" Title="Edit Employee" Width="180px">
            <Template Context="Employee">
                <div style="display: flex; justify-content: space-around;">
                    <RadzenButton Click="@(()=> OpenDialog(Employee.EmployeeId))" Text="Edit" ButtonStyle="ButtonStyle.Primary" />
                    <RadzenButton Text="Add" ButtonStyle="ButtonStyle.Info" />
                </div>
            </Template>
        </RadzenDataGridColumn>

    </Columns>
</RadzenDataGrid>

@code {
    private bool IsVisible = false;

    private async Task OpenDialog(int id)
    {
        IsVisible = true;

        var parameters = new Dictionary<string, object>
{
     { "userId", id }
};

        var dialogResult = await DialogService.OpenAsync<EditEmployeeDialog>
       (
       "Edit/Add Employee",
       parameters,
       new DialogOptions() { Width = "30% !important", CloseDialogOnOverlayClick = true }
       );
    }
}
